import Image from "next/image";

type UseCase = {
  title: string;
  description: string;
  steps: string[];
  result: string;
  image: string;
  example: {
    icon: string;
    title: string;
    description: string[];
    benefit: string;
  };
};

export default function UseCases() {
  const useCases: UseCase[] = [
    {
      title: "G√©rer les demandes clients sans s'√©parpiller",
      description:
        "Chaque jour, votre bo√Æte mail d√©borde de briefs, retours, ajustements, validations‚Ä¶ Et vos chefs de projet passent des heures √† reconstituer l'info, souvent dispers√©e sur plusieurs messages.",
      image: "/images/email-extraction.svg",
      steps: [
        "D√©tection automatique des demandes clients, briefs et modifications",
        "Extraction des infos cl√©s (dates, deadlines, options‚Ä¶)",
        "Alimentation automatique de vos outils (Notion, ClickUp, Drive)",
      ],
      result:
        "20 minutes de tri, recollage et reformulation deviennent 30 secondes ‚Äî sans erreur, sans friction",
      example: {
        icon: "üíº",
        title: "Focus sur l'essentiel",
        description: [
          "M√™me quand la demande est morcel√©e sur 5 mails, tout est regroup√©",
          "Vos √©quipes restent focus sur la relation et la production",
        ],
        benefit: "Vos clients voient juste une agence carr√©e, rapide et fluide",
      },
    },
    {
      title: "Transformer vos r√©unions en briefs clairs",
      description:
        "En r√©union avec vos talents, cr√©ateurs ou partenaires, il faut tout √©couter, tout noter, tout reformuler. Et malgr√© √ßa, on oublie des points, on perd du temps √† tout remettre en forme, ou on oublie d'envoyer le r√©cap‚Ä¶",
      image: "/images/meeting-brief.svg",
      steps: [
        "Transcription de vos √©changes (avec accord)",
        "G√©n√©ration d'un r√©sum√© structur√© avec actions √† mener",
        "Classement automatique dans vos dossiers partag√©s",
      ],
      result:
        "En quelques minutes, vous obtenez un brief clair, pr√™t √† √™tre partag√© ‚Äî sans travail en plus",
      example: {
        icon: "üßë‚Äçüé§",
        title: "Restez dans la discussion",
        description: [
          "Plus besoin de tout noter pendant les √©changes",
          "L'outil s'occupe de la structuration et du suivi",
        ],
        benefit:
          "Vous restez concentr√© sur l'√©change, pendant que l'outil s'occupe du reste",
      },
    },
    {
      title: "Cr√©ation automatique de reportings de campagne",
      description:
        "Vous passez du temps √† r√©cup√©rer des r√©sultats √† la main ou les talents les remplissent dans un Drive ou un formulaire, et vos √©quipes passent des heures √† compiler, reformuler et cr√©er les reportings √† la main.",
      image: "/images/reporting.svg",
      steps: [
        "Centralisation automatique des donn√©es",
        "Structuration du reporting avec recommandations personnalis√©es",
        "Pr√©paration d'un livrable clair pr√™t √† √™tre valid√©",
      ],
      result:
        "Plusieurs heures √©conomis√©es par campagne, avec des reportings pros et coh√©rents",
      example: {
        icon: "üìä",
        title: "Gardez le contr√¥le",
        description: [
          "L'IA pr√©pare le reporting complet",
          "Vous validez et ajustez si besoin avant envoi",
        ],
        benefit:
          "Des reportings professionnels en quelques clics, toujours valid√©s par vous",
      },
    },
  ];

  return (
    <section className="py-24 bg-white" id="use-cases">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-3xl font-bold mb-4">Cas d'usages</h2>
          <p className="text-gray-600 max-w-2xl mx-auto">
            Des solutions concr√®tes pour vos d√©fis quotidiens. Voici comment nos
            clients transforment leurs processus avec Agilista.
          </p>
        </div>

        <div className="space-y-24">
          {useCases.map((useCase, index) => (
            <div key={index} className="max-w-5xl mx-auto">
              <div className="grid md:grid-cols-2 gap-12 items-center mb-8">
                <div className={`${index % 2 !== 0 ? "md:order-2" : ""}`}>
                  <h3 className="text-2xl font-bold mb-4 text-[#7C3AED]">
                    {useCase.title}
                  </h3>
                  <p className="text-lg text-gray-600 mb-8">
                    {useCase.description}
                  </p>

                  <div className="space-y-4 mb-8">
                    {useCase.steps.map((step, idx) => (
                      <div key={idx} className="flex items-start gap-3">
                        <div className="flex-shrink-0 w-6 text-[#7C3AED]">
                          ‚ö°
                        </div>
                        <div className="text-gray-700 font-medium">{step}</div>
                      </div>
                    ))}
                  </div>

                  <div className="bg-[#F8F7FF] p-6 rounded-lg border border-[#7C3AED]/20">
                    <div className="flex items-center gap-3">
                      <div className="text-xl">‚ú®</div>
                      <div className="font-medium text-gray-800">
                        R√©sultat :{" "}
                        <span className="font-bold text-[#7C3AED]">
                          {useCase.result}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                <div
                  className={`${index % 2 !== 0 ? "md:order-1" : ""} relative h-64 md:h-[320px] rounded-xl overflow-hidden`}
                >
                  <Image
                    src={useCase.image}
                    alt={useCase.title}
                    fill
                    style={{ objectFit: "contain" }}
                    priority
                  />
                </div>
              </div>

              <div className="bg-white rounded-xl border border-gray-200 p-8 shadow-sm hover:shadow-md transition-shadow">
                <div className="flex items-center gap-3 mb-4">
                  <div className="text-3xl">{useCase.example.icon}</div>
                  <h4 className="text-xl font-semibold">
                    {useCase.example.title}
                  </h4>
                </div>

                <ul className="space-y-3 mb-6">
                  {useCase.example.description.map((item, itemIdx) => (
                    <li key={itemIdx} className="flex items-start gap-2">
                      <span className="text-[#7C3AED] mt-1 font-bold">‚Üí</span>
                      <span className="text-gray-600">{item}</span>
                    </li>
                  ))}
                </ul>

                <div className="mt-4 pt-4 border-t border-gray-100">
                  <div className="flex items-start gap-2">
                    <span className="font-semibold text-[#7C3AED] mt-1">
                      üí´
                    </span>
                    <span className="text-gray-700 font-medium">
                      {useCase.example.benefit}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
